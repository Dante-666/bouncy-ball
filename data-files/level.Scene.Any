// -*- c++ -*-
// You can extend this sample scene file format with your own fields.
// Edit the scene parsing in Scene.cpp.
{
    name = "Level",

    models = {
	playerModel = ArticulatedModel::Specification {
	    filename = "models/ball.obj";
	};
	groundModel = ArticulatedModel::Specification {
	    filename = "models/floor.obj";
	};
	curveGroundModel = ArticulatedModel::Specification {
	    filename = "models/bowl.obj";

	    preprocess = {
		setTwoSided("Bowl_Sphere_ground/ground", true);
	    };
	};
    };
   
    lightingEnvironment = LightingEnvironment {
        environmentMap = Texture::Specification {
            filename = "cubemap/hipshot_m9_sky/16_*.png";
            encoding = Texture::Encoding{
				format = "SRGB8";
				readMultiplyFirst= 1.5;
			};
        };
    };
    
    entities = {
        
        sun = Light { 
            attenuation = ( 0, 0, 1 ); 
            bulbPower = Power3(4e+006 ); 
            shadowsEnabled = true; 
            canChange = false;
            enabled = true; 
			shadowMapBias = 0.05;
            frame = CFrame::fromXYZYPRDegrees(-15.5767, 207.755, -41.952, -164.03, -76.7166, 76.514 ); 
            nearPlaneZLimit = -170; 
            producesDirectIllumination = true; 
            producesIndirectIllumination = true; 
            shadowMapSize = Vector2int16(2048, 2048 ); 
            spotHalfAngleDegrees = 5; 
            rectangular = true; 
            type = "SPOT"; 
        }; 

        player = VisibleEntity {
            model = "playerModel";
            frame = Point3(0, 2, 0); 
        };

	rigid = RigidEntity {
	    model = "playerModel";
	    frame = CFrame::fromXYZYPRDegrees(2, 15, 0, 0, 0, 0);
	    mass = 1.0;
	    collisionShape = "SPHERE";
	    shape = Sphere(1.0);
	};

        ground = RigidEntity { 
            model = "curveGroundModel";
            frame = CFrame::fromXYZYPRDegrees(0, 0, 0, 0, 0, 0);
	    mass = 0.0;
            canChange = false;
	    collisionShape = "MESH";
        };

        camera = Camera {
            frame = CFrame::fromXYZYPRDegrees(0, 10, 20, 0, -25, 0);
        
            depthOfFieldSettings = DepthOfFieldSettings {
                model = "ARTIST";
                enabled = false;
                nearSharpPlaneZ = -1.5;
            };

            motionBlurSettings = MotionBlurSettings {
                enabled = false;
            };

            projection = Projection {
                nearPlaneZ = -0.2;
                farPlaneZ = -400;
                fovDirection = "VERTICAL";
                fovDegrees = 50;
            }
        };
    };

}
