{ 
    description = ""; 
    entities = { 
        camera = Camera { 
            depthOfFieldSettings = DepthOfFieldSettings { 
                enabled = false; 
                farBlurRadiusFraction = 0.005; 
                farBlurryPlaneZ = -100; 
                farSharpPlaneZ = -40; 
                focusPlaneZ = -10; 
                lensRadius = 0.01; 
                model = "ARTIST"; 
                nearBlurRadiusFraction = 0.015; 
                nearBlurryPlaneZ = -0.25; 
                nearSharpPlaneZ = -1.5; 
                reducedResolutionFactor = 1; 
            }; 
            
            filmSettings = FilmSettings { 
                antialiasingEnabled = true; 
                antialiasingFilterRadius = 0; 
                antialiasingHighQuality = true; 
                bloomRadiusFraction = 0.015; 
                bloomStrength = 0.25; 
                debugZoom = 1; 
                downscaleFilter = "BILINEAR"; 
                effectsEnabled = true; 
                gamma = 2.2; 
                invertX = false; 
                invertY = false; 
                sensitivity = 1; 
                temporalAntialiasingEnabled = false; 
                toneCurve = Spline { 
                    control = ( 0, 0.1, 0.2, 0.5, 1 ); 
                    extrapolationMode = "LINEAR"; 
                    finalInterval = -1; 
                    interpolationMode = "CUBIC"; 
                    time = ( 0, 0.1, 0.2, 0.5, 1 ); 
                }; 
                
                upscaleFilter = "BILINEAR"; 
                vignetteBottomStrength = 0.05; 
                vignetteSizeFraction = 0.17; 
                vignetteTopStrength = 0.5; 
            }; 
            
            frame = CFrame::fromXYZYPRDegrees(17.7805, 10.133, -21.589, -153.721, -11.6833 ); 
            mass = 1; 
            motionBlurSettings = MotionBlurSettings { 
                enabled = true; 
                exposureFraction = 0.75; 
                maxBlurDiameterFraction = 0.1; 
                numSamples = 27; 
            }; 
            
            overridePixelOffset = true; 
            projection = Projection { 
                farPlaneZ = -400; 
                fovDegrees = 50; 
                fovDirection = "VERTICAL"; 
                nearPlaneZ = -0.2; 
                pixelOffset = Vector2(0, 0 ); 
            }; 
            
            visualizationScale = 1; 
        }; 
        
        ghost = GhostEntity { 
            ashape = AShape { 
                box = AABox(
                    Vector3(-1, -1, -1 ), 
                    Vector3(15, 3, 5 ) ); 
                
            }; 

	    field = ForceField {
		force = Vector3(10, 0, 0);
	    };
            
            color = Color3(1, 0, 0 ); 
            frame = CFrame::fromXYZYPRDegrees(19.1445, 6.15418, -1.10856, 0, 87.8296 ); 
        }; 
        
        ground = PhysicsEntity { 
            ashape = AShape { 
            }; 
            
            canCauseCollisions = true; 
            canChange = false; 
            frame = CFrame::fromXYZYPRDegrees(0, 0, 0, 0, 0, 0 ); 
            mass = 0; 
            model = "groundModel2"; 
            visible = true; 
        }; 
        
        player = PhysicsEntity { 
            ashape = AShape { 
                sphere = Sphere(1 ); 
            }; 
            
            canCauseCollisions = true; 
            frame = CFrame::fromXYZYPRDegrees(28.4414, 2, 0.00212579, -0.395153, -0.0998408, 67.4519 ); 
            mass = 0.5; 
            model = "playerModel"; 
            solid = Solid { 
                phased = false; 
                rollingFriction = 0.3; 
            }; 
            
        }; 
        
        sun = Light { 
            attenuation = ( 0, 0, 1 ); 
            bulbPower = Power3(4e+06 ); 
            canCauseCollisions = true; 
            canChange = false; 
            enabled = true; 
            frame = CFrame::fromXYZYPRDegrees(-15.5767, 207.755, -41.952, -164.03, -76.7166, 76.514 ); 
            mass = 1; 
            nearPlaneZLimit = -170; 
            producesDirectIllumination = true; 
            producesIndirectIllumination = true; 
            rectangular = true; 
            shadowMapBias = 0.05; 
            shadowMapSize = Vector2int16(2048, 2048 ); 
            shadowsEnabled = true; 
            spotHalfAngleDegrees = 5; 
            type = "SPOT"; 
        }; 
        
    }; 
    
    lightingEnvironment = LightingEnvironment { 
        ambientOcclusionSettings = AmbientOcclusionSettings { 
            bias = 0.02; 
            blurRadius = 2; 
            blurStepSize = 1; 
            depthPeelSeparationHint = 0.01; 
            edgeSharpness = 1; 
            enabled = true; 
            highQualityBlur = true; 
            intensity = 1; 
            monotonicallyDecreasingBilateralWeights = false; 
            numSamples = 20; 
            packBlurKeys = false; 
            radius = 0.75; 
            temporalFilterSettings = TemporalFilter::Settings { 
                falloffEndDistance = 0.07; 
                falloffStartDistance = 0.05; 
                hysteresis = 0.9; 
            }; 
            
            temporallyVarySamples = true; 
            useDepthPeelBuffer = false; 
            useNormalBuffer = true; 
            useNormalsInBlur = true; 
            zStorage = "HALF"; 
        }; 
        
        environmentMap = Texture::Specification { 
            encoding = Texture::Encoding { 
                format = "SRGB8"; 
                readMultiplyFirst = 1.5; 
            }; 
            
            filename = "cubemap/hipshot_m9_sky/16_*.png"; 
        }; 
        
    }; 
    
    models = { 
        boxModel = ArticulatedModel::Specification { 
            filename = "models/box.obj"; 
        }; 
        
        curveGroundModel = ArticulatedModel::Specification { 
            filename = "models/bowl.obj"; 
            preprocess = { 
                setTwoSided("Bowl_Sphere_ground/ground", true ) }; 
            
        }; 
        
        cylinderModel = ArticulatedModel::Specification { 
            filename = "models/cylinder.obj"; 
        }; 
        
        groundModel = ArticulatedModel::Specification { 
            filename = "models/floor.obj"; 
        }; 
        
        groundModel2 = ArticulatedModel::Specification { 
            filename = "models/floor2.obj"; 
        }; 
        
        playerModel = ArticulatedModel::Specification { 
            filename = "models/ball.obj"; 
        }; 
        
    }; 
    
    name = "Level"; 
} 
